using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;

namespace Chessgame
{
    public class Game1 : Game
    {
        private GraphicsDeviceManager _graphics;
        private SpriteBatch _spriteBatch;

        Texture2D whiteBlock;
        Texture2D brownBlock;
        bool isWhite = true;
    
        public Game1()
        {
            _graphics = new GraphicsDeviceManager(this);
            Content.RootDirectory = "Content";
            IsMouseVisible = true;
        }

        protected override void Initialize()
        {
            // TODO: Add your initialization logic here

            base.Initialize();
        }

        protected override void LoadContent()
        {
            _spriteBatch = new SpriteBatch(GraphicsDevice);

            _graphics.PreferredBackBufferWidth = 800;
            _graphics.PreferredBackBufferHeight = 800;
            _graphics.ApplyChanges();

            //Grid
            whiteBlock = Content.Load<Texture2D>("white_Block");
            brownBlock = Content.Load<Texture2D>("brown_Block");

            // TODO: use this.Content to load your game content here
        }

        protected override void Update(GameTime gameTime)
        {
            if (GamePad.GetState(PlayerIndex.One).Buttons.Back == ButtonState.Pressed || Keyboard.GetState().IsKeyDown(Keys.Escape))
                Exit();

            // TODO: Add your update logic here

            base.Update(gameTime);
        }

        protected override void Draw(GameTime gameTime)
        {
            GraphicsDevice.Clear(Color.Black);

            _spriteBatch.Begin();

            for (int i = 0; i < 8; i += 1)
            {
                if (i % 2 == 0)
                {
                    for (int z = 0; z < 8; z++)
                    {
                        if (z % 2 == 0)
                        {
                            _spriteBatch.Draw(whiteBlock, new Vector2(i*100, z*100), Color.White);
                        }
                        else 
                        {
                            _spriteBatch.Draw(brownBlock, new Vector2(i * 100, z * 100), Color.White);
                        }
                    }
                }
                else
                {
                    for (int z = 0; z < 8; z++)
                    {
                        if (z % 2 == 0)
                        {
                            _spriteBatch.Draw(brownBlock, new Vector2(i * 100, z * 100), Color.White);
                        }
                        else
                        {
                            _spriteBatch.Draw(whiteBlock, new Vector2(i * 100, z * 100), Color.White);
                        }
                    }
                }
            }
            _spriteBatch.End();

            // TODO: Add your drawing code here

            base.Draw(gameTime);
        }
    }
}
